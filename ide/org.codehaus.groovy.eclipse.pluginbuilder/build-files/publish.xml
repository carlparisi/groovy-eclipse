<project name="Publish to webdav location" default="s3.deploy" basedir="." xmlns:antcontrib="antlib:net.sf.antcontrib">
	<!-- ================================= 
          target: s3.deploy              
       ================================= -->
	<target name="s3.deploy" depends="-init,zip.updatesite,create.html" description="Deploys Groovy-Eclipse to S3">
		<echo>Publishing to Amazon S3</echo>

		<path id="s3.classpath">
			<fileset dir="${basedir}/s3-libs">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<taskdef name="s3" classname="org.springframework.build.aws.ant.SimpleStorageService" classpathref="s3.classpath" />

		<s3 accessKey="${accessKey}" secretKey="${secretKey}">
			<!-- Delete old update site, but keep archives -->
			<delete bucketName="${upload.bucket}">
				<fileset dir="${upload.dir}/plugins/">
					<include name="**"/>
				</fileset>
				<fileset dir="${upload.dir}/features/">
					<include name="**"/>
				</fileset>
			</delete>
			<delete bucketName="${upload.bucket}" file="${upload.dir}/content.xml" />
			<delete bucketName="${upload.bucket}" file="${upload.dir}/artifacts.xml" />
			<delete bucketName="${upload.bucket}" file="${upload.dir}/site.xml" />
			<delete bucketName="${upload.bucket}" file="${upload.dir}/index.html" />
			<upload bucketName="${upload.bucket}" toDir="${upload.dir}" publicRead="true">
				<fileset dir="${updateSiteDir}">
					<include name="*.html" />
				</fileset>
				<metadata name="Content-Type" value="text/html" />
			</upload>
			<upload bucketName="${upload.bucket}" toDir="${upload.dir}" publicRead="true">
				<fileset dir="${updateSiteDir}">
					<include name="*.xml" />
				</fileset>
				<metadata name="Content-Type" value="text/xml" />
			</upload>
			<upload bucketName="${upload.bucket}" toDir="${upload.dir}" publicRead="true">
				<fileset dir="${updateSiteDir}">
					<include name="*.zip" />
					<include name="plugins/*" />
					<include name="features/*" />
				</fileset>
			</upload>
		</s3>
	</target>

	<target name="zip.updatesite" depends="-init">
		<mkdir dir="${updateSiteDir}" />
		<zip destfile="${updateSiteDir}/${archive.name}">
			<zipfileset dir="${updateSiteDir}">
				<include name="**/*" />
				<exclude name="**/*.zip" />
			</zipfileset>
		</zip>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: create.html                      
         - - - - - - - - - - - - - - - - - -->
    <target name="create.html" depends="-init">
    	<copy file="index.html" todir="${updateSiteDir}"/>
    	<replace file="${updateSiteDir}/index.html" summary="yes" token="@GROOVY_ECLIPSE_VERSION@" value="${archive.name}"/>
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: -init                      
    - - - - - - - - - - - - - - - - - -->
	<target name="-init">
		<property file="../build_local_${eclipse.target.version}.properties" />
		<property file="${buildDirectory}/finalPluginsVersions.properties" />
		<property environment="env" />
		<property file="${env.dist_properties}" />
		<property name="updateSiteDir" value="${workDir}/build/updateSite" />
  	<property name="archive.name" value="archive-${org.codehaus.groovy.eclipse.ui}.zip"/>

		<condition property="upload.dir.postfix" value="e4.2">
			<equals arg1="${eclipse.target.version}" arg2="e42" />
		</condition>
		<condition property="upload.dir.postfix" value="e3.7">
			<equals arg1="${eclipse.target.version}" arg2="e37" />
		</condition>
		<condition property="upload.dir.postfix" value="e3.6">
			<equals arg1="${eclipse.target.version}" arg2="e36" />
		</condition>

		<property name="upload.bucket" value="dist.springsource.org" />
		<property name="upload.dir.prefix" value="snapshot/GRECLIPSE" />
		<property name="upload.dir" value="${upload.dir.prefix}/${upload.dir.postfix}" />
	</target>


</project>